<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: httparty | NatRitmeyer.com]]></title>
  <link href="http://natritmeyer.com/blog/categories/httparty/atom.xml" rel="self"/>
  <link href="http://natritmeyer.com/"/>
  <updated>2013-09-09T20:20:44+01:00</updated>
  <id>http://natritmeyer.com/</id>
  <author>
    <name><![CDATA[Nat Ritmeyer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to debug HTTParty requests]]></title>
    <link href="http://natritmeyer.com/blog/2013/09/09/how-to-debug-httparty-requests/"/>
    <updated>2013-09-09T19:42:00+01:00</updated>
    <id>http://natritmeyer.com/blog/2013/09/09/how-to-debug-httparty-requests</id>
    <content type="html"><![CDATA[<p>I very frequently find myself debugging http calls. Curl makes it easy to do this through its <code>-v</code> switch that lets you see exactly what it&rsquo;s doing. For example:</p>

<p>```sh
$ curl -v <a href="http://www.google.co.uk">http://www.google.co.uk</a>
* About to connect() to www.google.co.uk port 80 (#0)
*   Trying 173.194.41.95&hellip; connected
* Connected to www.google.co.uk (173.194.41.95) port 80 (#0)</p>

<blockquote><p>GET / HTTP/1.1
User-Agent: curl/7.21.4 (universal-apple-darwin11.0) libcurl/7.21.4 OpenSSL/0.9.8x zlib/1.2.5
Host: www.google.co.uk
Accept: <em>/</em></p></blockquote>

<p>```</p>

<p>Hostname-to-IP resolution, any SSL handshaking as well as full header details are on display. If you&rsquo;re doing a
POST or PUT you get the body too. All very helpful.</p>

<p>But, once I&rsquo;ve figured out what I need my code to do I need to translate my curl incantations into <a href="http://johnnunemaker.com/httparty/">HTTParty</a> &ndash; currently my favourite ruby http library. It is possible to get
similar details out of httparty but it&rsquo;s a little esoteric.</p>

<p>Here&rsquo;s a fairly representative use of httparty:</p>

<p>```ruby
require &lsquo;httparty&rsquo;</p>

<p>class Google
  include HTTParty</p>

<p>  base_uri &ldquo;<a href="http://www.google.co.uk">http://www.google.co.uk</a>&rdquo;</p>

<p>  def home_page</p>

<pre><code>self.class.get "/"
</code></pre>

<p>  end
end</p>

<p>goog = Google.new
puts goog.home_page
```</p>

<p>But if I run that, I don&rsquo;t get any debug info (as expected):</p>

<p><code>sh
$ ruby httparty_debug.rb
&lt;!doctype html&gt;&lt;html itemscope="" itemtype="http://schema.org/WebPage"&gt;&lt;head&gt;&lt;meta ...
...
</code></p>

<p>No headers, no hostname-to-ip resolution, no SSL details.</p>

<p>To get the debug info, add <code>debug_output $stdout</code> on a new line after <code>include HTTParty</code>, eg:</p>

<p>```ruby
class Google
  include HTTParty
  debug_output $stdout # &lt;= this is it!</p>

<p>  #&hellip;
end
```</p>

<p>The result of running that will be a console filled with debug info!</p>

<p><code>sh
$ ruby httparty_debug.rb
opening connection to www.google.co.uk:80...
opened
&lt;- "GET / HTTP/1.1\r\nConnection: close\r\nHost: www.google.co.uk\r\n\r\n"
-&gt; "HTTP/1.1 200 OK\r\n"
-&gt; "Date: Mon, 09 Sep 2013 18:59:12 GMT\r\n"
-&gt; "Expires: -1\r\n"
...
...
...
</code></p>

<p>Note that if you&rsquo;d rather the debug info went to <code>$stderr</code>, change <code>debug_output $stdout</code> to <code>debug_output $stderr</code>.</p>

<p>Hope that helps!</p>
]]></content>
  </entry>
  
</feed>
